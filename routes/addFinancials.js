var db = require("../models");

module.exports = function(app) {
    // Create a new financials
  app.post("/api/addFinancials", function(req, res) {
    db.Financials.create({
        symbol: req.body.symbol,
        date: req.body.date,
        revenue: revenue.req.body,
        revenueGrowth: revenueGrowth.req.body,
        costOfRevenue: costOfRevenue.req.body,
        rndExpenses: rndExpenses.req.body,
        sgaExpense: sgaExpense.req.body,
        operatingExpense: operatingExpense.req.body,
        operatingIncome: operatingIncome.req.body,
        interestExpense: interestExpense.req.body,
        earningsBeforeTax: earningsBeforeTax.req.body,
        incomeTaxExpense: incomeTaxExpense.req.body,
        netIncomeNonControllingInt: netIncomeNonControllingInt.req.body,
        netIncomeDiscontinuedOps: netIncomeDiscontinuedOps.req.body,
        netIncome: netIncome.req.body,
        preferredDividends: preferredDividends.req.body,
        netIncomeCom: netIncomeCom.req.body,
        EPS: EPS.req.body,
        EPSDiluted: EPSDiluted.req.body,
        weightedAverageShsOut: weightedAverageShsOut.req.body,
        weightedAverageShsOutDil: weightedAverageShsOutDil.req.body,
        dividendPerShare: dividendPerShare.req.body,
        grossMargin: grossMargin.req.body,
        EBITDAMargin: EBITDAMargin.req.body,
        EBITMargin: EBITMargin.req.body,
        profitMargin: profitMargin.req.body,
        freeCashFlowMargin: freeCashFlowMargin.req.body,
        EBITDA: EBITDA.req.body,
        EBIT: EBIT.req.body,
        consolidatedIncome: consolidatedIncome.req.body,
        earningsBeforeTaxMargin: earningsBeforeTaxMargin.req.req.body,
        netProfitMargin: netProfitMargin.req.body,
        cashAndCashEquivalents: cashAndCashEquivalents.req.body,
        shortTermInvestments: shortTermInvestments.req.body,
        cashAndShortTermInvestments: cashAndShortTermInvestments.req.body,
        receivables: receivables.req.body,
        inventories: inventories.req.body,
        totalCurrentAssets: totalCurrentAssets.req.body,
        propertyPlantEquipmentNet: propertyPlantEquipmentNet.req.body,
        goodwillAndIntangibleAssets: goodwillAndIntangibleAssets.req.body,
        longTermInvestments: longTermInvestments.req.body,
        taxAssets: taxAssets.req.body,
        totalNonCurrentAssets: totalNonCurrentAssets.req.body,
        totalAssets: totalAssets.req.body,
        payables: payables.req.body,
        shortTermDebts: shortTermDebts.req.body,
        totalDebt: totalDebt.req.body,
        deferredRevenue: deferredRevenue.req.body,
        taxLiabilities: taxLiabilities.req.body,
        totalNonCurrentLiabilities: totalNonCurrentLiabilities.req.body,
        totalLiabilities: totalLiabilities.req.body,
        otherComprehensiveIncome: otherComprehensiveIncome.req.body,
        retainedEarnings: retainedEarnings.req.body,
        totalShareholdersEquity: totalShareholdersEquity.req.body,
        investments: investments.req.body,
        netDebt: netDebt.req.body,
        otherAssets: otherAssets.req.body,
        otherLiabilities: otherLiabilities.req.body
    }).then(function(Financials) {
      res.json(Financials);
    });
  });
};